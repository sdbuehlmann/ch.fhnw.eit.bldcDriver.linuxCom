/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class loggerbldcmotordriver_serialcom_BLDCDriverCommunication */

#ifndef _Included_loggerbldcmotordriver_serialcom_BLDCDriverCommunication
#define _Included_loggerbldcmotordriver_serialcom_BLDCDriverCommunication
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    startSerial
 * Signature: (Ljava/lang/String;IZZI)I
 */
JNIEXPORT jint JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_startSerial
  (JNIEnv *, jobject, jstring, jint, jboolean, jboolean, jint);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    enableSerialOperatingMode
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_enableSerialOperatingMode
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    enableLogging
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_enableLogging
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    enableDriver
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_enableDriver
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    disableDriver
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_disableDriver
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    selectPositiveTorque
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_selectPositiveTorque
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    selectNegativeTorque
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_selectNegativeTorque
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    rotadeClockwise
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_rotadeClockwise
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    rotadeCounterclockwise
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_rotadeCounterclockwise
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    getObservingInfos
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_getObservingInfos
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    getLoggingConfiguration
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_getLoggingConfiguration
  (JNIEnv *, jobject);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    setPositiveTorqueLevel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_setPositiveTorqueLevel
  (JNIEnv *, jobject, jint);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    setNegativeTorqueLevel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_setNegativeTorqueLevel
  (JNIEnv *, jobject, jint);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    setMaxAbsPhaseCurrent
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_setMaxAbsPhaseCurrent
  (JNIEnv *, jobject, jint);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    setTiming
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_setTiming
  (JNIEnv *, jobject, jint);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    setRotorPositionControllerPParam
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_setRotorPositionControllerPParam
  (JNIEnv *, jobject, jint);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    setRotorPositionControllerIParam
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_setRotorPositionControllerIParam
  (JNIEnv *, jobject, jint);

/*
 * Class:     loggerbldcmotordriver_serialcom_BLDCDriverCommunication
 * Method:    setLoggingConfig
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_loggerbldcmotordriver_serialcom_BLDCDriverCommunication_setLoggingConfig
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
